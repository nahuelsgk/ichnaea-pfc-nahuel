{% extends '::IchnaeaBase.html.twig' %}

{% macro season_options(n_file, selected_option) %}
  <select name="season_{{n_file}}">
    <option value="spring" {% if selected_option == 'spring' %}selected{% endif %}>Spring</option>
    <option value="summer" {% if selected_option == 'summer' %}selected{% endif %}>Summer</option>
    <option value="autumn" {% if selected_option == 'autumn' %}selected{% endif %}>Autumn</option>
    <option value="winter" {% if selected_option == 'winter' %}selected{% endif %}>Winter</option>
    <option value="all_year" {% if selected_option == 'all_year' %}selected{% endif %}>All year</option>
  </select>
{% endmacro %}

{% block page_title %}
  {% if action == 'create' %}
    New season set for '{{variable_name}}'
  {% else %}
    Edit season set '{{season_set.name}}' of '{{season_set.variable.name}}'
  {% endif %}
{% endblock %}

{% block header_page_title %}{% if action == 'create' %}New season set for {{variable_name}}{% else %}Edit season set <i>{{season_set.name}}</i> of <i><a href="{{path('variable_edit', {variable_id: season_set.variable.id})}}"> {{season_set.variable.name}}</a></i>{% endif %}{% endblock %}

{% block body %}
<div class="container">
<form id="seasonSet_form" method="POST" 
	action="{% if action == 'create' %}
				{{path ('season_set_create', {'variable_id' : variable_id}) }}
			{% else %}
				{{path ('season_set_update', {'variable_id': variable_id, 'season_set_id': season_set.id}) }}
			{% endif %}" 
	class="form-horizontal">
	
    <legend>
      {% if action == 'create' %}New season set
      {% else %}Edit season set {% endif %} for <a href="{{ path ('variable_edit', {'variable_id':variable_id}) }}"> {{ variable_name }}</a>  
    </legend>
	<div class="control-group">
        <label class="control-label" for="seasonName">Name of the season set</label>
        <div class="controls">
          <input type="text" id="name_season_set" name="season_set_name" placeholder="Season set's name" {% if action == 'update' %}value="{{season_set.name}}"{% endif %}>
        </div>
    </div>
	
	{% if action == 'update' %}
	<legend>List of seasons in this season set</legend>
	<ul>
	{% for season_component in season_set_components %}
		<li id="season_set_component-{{season_component.id}}">
		  <a class="btn btn-mini" name="edit_season_set" title="Delete season set component" onclick='deleteSeasonSetComponent( {{season_component.id}}, "season_set_component-{{season_component.id}}")' >
  		  <i class="icon-remove"></i></a>
  		  <a class="btn btn-mini" name="edit_season_set" title="Delete season set component and file" onclick='deleteSeasonSetComponentComplete( {{season_component.id}}, "season_set_component-{{season_component.id}}")' >
  		  <i class="icon-trash"></i></a> </i> 
  		  <a href="{{ path('season_edit', { 'season_id': season_component.season.id }) }}" target="_blank">{{season_component.season.name}}</a> is configured for this season set as <i>{{ season_component.seasonType }}</i>  		  
  		</li>
	{% endfor %}
	</ul>
	{% endif %}
	
	<legend>Add new seasons to this season set</legend>
	<div class="control-group">
        <label class="control-label" for="end-date">Seasons file</label>
        <div class="controls">
           <input type="file" id="file_0" name="file_0" />
           {{ _self.season_options(0, 'summer') }}
           <textarea id="content_0" name="content_0" readonly></textarea>
        </div>
        <div class="controls">
           <input type="file" id="file_1" name="file_1" />
           {{ _self.season_options(1, 'winter') }}
           <textarea id="content_1" name="content_1" readonly></textarea>
        </div>
    </div>
	
	<div>
    <legend>Add shared seasons
    	<!--  <a class="btn btn-mini" name="add_season" title="Add season from the system" onclick="addSeasonComponent();">
     	<i class="icon-plus"></i></a>-->
    </legend>
    <div class="control-group">
        <label class="control-label" for="list_of_season_components">Seasons components</label>
        <div class="controls" id="list_of_season_components">
           <!--  <div class="season_component_form" id="component_form">
             <input type="text" placeholder="Search season name or type new name" data-season_id="" data-already_in_system="" id="component0">
             <input type="text" placeholder="Season id" data-season_id="" data-already_in_system="" id="id0">
           </div>
           -->
        </div>
    </div>
    <div class="form-actions">
        <button type="submit" class="btn btn-primary">Save changes</button>
    </div>
    </div>
</form>
</div>


<!-- Tricky part: is hidden and later when init the form just call to the add this template. The number 3 is only for respect the macro. By now, only 3 selectors -->
<div class="template_hidden" id="template_component_item" name="component[]">
             <input type="text" class="season_component_name" name="season_name" placeholder="Search season name or type new name">
             {{ _self.season_options(3, 'summer') }}
             <input type="text" class="season_component_id" name="season_id" placeholder="Season id" id="" readonly>
</div>

{% endblock %}

{% block extra_javascript %}

function notify(message){
     alert(message);
     return false;
}
function checkErrors(){
    if ($('#name_season_set').val() == '') return notify('Season set needs a name');
    return true; 
}

var indexSeasonComponents = 0;

{% if action == 'update' %}
function deleteItem(li){
    console.log('The item will try to delete is: '+li);
    $('#'+li).remove();
}

function deleteSeasonSetComponentAction(seasonComponent_id, li){
	sendEvent('{{path('season_set_delete',{'variable_id': variable_id, 'seasonSet_id': season_set.id })}}/component/'+seasonComponent_id,
      	'DELETE',
    	{},
    	function (data){deleteItem(li)});
}

function deleteCompleteSeasonSetComponentAction(seasonComponent_id, li){
	sendEvent('{{path('season_set_delete',{'variable_id': variable_id, 'seasonSet_id': season_set.id })}}/component/'+seasonComponent_id+'/complete',
      	'DELETE',
    	{},
    	function (data){deleteItem(li)});
}

function deleteSeasonSetComponent(seasonComponent_id, li){
	confirmMessage('You are about to delete a season from a season set. This will not delete the file', function (){deleteSeasonSetComponentAction(seasonComponent_id, li)});
}
function deleteSeasonSetComponentComplete(seasonComponent_id, li){
	confirmMessage('You are about to delete a season from a season set and its file. WARNING: THIS WILL DELETE THE FILE', function (){deleteCompleteSeasonSetComponentAction(seasonComponent_id, li)});
}
{% endif %}

function addSeasonComponent(){
    var season_component = $('#template_component_item').clone();
    season_component.attr('id', 'component'+indexSeasonComponents);
    season_component.attr('class', 'component_season_set');
    
    //Names id
    var id_input_season_component_name = 'component_name-'+indexSeasonComponents;
    var id_input_season_id = 'component_season_id-'+indexSeasonComponents;
    
    season_component.find('input.season_component_name').attr('id', id_input_season_component_name);
    season_component.find('input.season_component_id').attr('id', id_input_season_id);
    
    season_component.find('input#'+id_input_season_component_name).autocomplete({
	    minLength: 1,
	    autoFocus: true,
	    delay: 500,
	    source: function sourceAutocomplete(request, response){
	      sendEvent(
	        '{{path('season_search_by_name')}}', 
	        'POST', 
	        { pattern: season_component.find('input#'+id_input_season_component_name).val() }, 
	        function(data){
	        response(
	          $.map(
	            data, 
	            function(obj){
	            	return {
	            		label: obj.name, 
	            		value: obj.name, 
	            		id: obj.id, 
	            		target_input_form: id_input_season_id
	            	} 
	            } 
	        )
	     )
	     }
	    )
	    },
	    select: function(event, ui){
	      season_component.find('input#'+ui.item.target_input_form).val(ui.item.id);
	    }
	}).data("autocomplete");
    $('#list_of_season_components').append(season_component);
    indexSeasonComponents++;
}

$(document).ready(function(){
    $('#seasonSet_form').submit(checkErrors);
	addSeasonComponent();
	importFileIntoInput('file_0', 'content_0');
	importFileIntoInput('file_1', 'content_1');
	
});
{% endblock %}

